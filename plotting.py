import numpy as np
import matplotlib.pyplot as plt


# Sets up axes for a new plot.
def prep_plot(xlim=(-10, 10), ylim=(-10, 10), padding=0):
    _, ax = plt.subplots(figsize=(6, 6))

    plt.xlim(xlim[0] - padding, xlim[1] + padding)
    plt.ylim(ylim[0] - padding, ylim[1] + padding)

    ax.grid(True, which="both")
    ax.axhline(y=0, color="k")
    ax.axvline(x=0, color="k")


# Plots a set of points given their coordinates.
def plot_xys(xys, points=True, segments=False, point_colour="k", segment_colour="grey"):
    xs = [xy[0] for xy in xys]
    ys = [xy[1] for xy in xys]

    if segments:
        plt.plot(xs, ys, segment_colour)
    if points:
        plt.plot(xs, ys, point_colour + ".")


# Plots points generated by a function for certain x-values.
def plot_func_vals(f, xs, points=True, segments=False, point_colour="k", segment_colour="grey"):
    xys = [(x, f(x)) for x in xs]

    plot_xys(xys,
             points=points, segments=segments,
             point_colour=point_colour, segment_colour=segment_colour)


# Plots a continuous function over all visible x-values.
def plot_func_continuous(f, samples=1000, colour="r"):
    x_min, x_max = plt.xlim()
    xs = np.arange(x_min, x_max, (x_max - x_min) / samples)

    plot_func_vals(f, xs,
                   points=False, segments=True,
                   segment_colour=colour)
